dist: focal

language: python

matrix:
    include:
        #- python: 2.7
        #  os: linux
        #  env:
        #      - BUILD_COMMAND=sdist
        #      - QT_BINDING=PySide2

        #- python: 3.8
        #  os: linux
        #  env:
        #      - BUILD_COMMAND=bdist_wheel
        #      - QT_BINDING=PyQt5

        - python: 3.8
          os: linux
          arch: ppc64le
          env:
              - BUILD_COMMAND=bdist_wheel
              - QT_BINDING=PyQt5

        #- python: 3.6
        #  os: linux
        #  env:
        #      - BUILD_COMMAND=sdist
        #      - QT_BINDING=PySide2

        # No particular need to test Python 2 on OSX
        #- language: generic
        #  os: osx
        #  env: 
        #      - BUILD_COMMAND=bdist_wheel
        #      - PYTHON_VERSION=2
        #      - QT_BINDING=PySide2

        #- language: generic
        #  os: osx
        #  env: 
        #      - BUILD_COMMAND=bdist_wheel
        #      - PYTHON_VERSION=3
        #      - QT_BINDING=PyQt5

branches:
    only:
        - master

cache:
    apt: true

addons:
    apt:
        packages:
            - libgl1-mesa-dev  # For OpenGL headers
            - libegl1-mesa  # Required by Qt xcb platform plugin
            - libxkbcommon-x11-0 # needed for Qt plugins
            - libxkbcommon0
            - libxkbcommon-dev
            - libxcb-icccm4
            - libxcb-image0
            - libxcb-shm0
            - libxcb-keysyms1
            - libxcb-randr0
            - libxcb-render-util0
            - libxcb-render0
            - libxcb-shape0
            - libxcb-sync1
            - libxcb-xfixes0
            - libxcb-xinerama0
            - libxcb-xkb1
            - libxcb1
            - python3-pyqt5 # no wheel available

services:
    - xvfb

before_install:
    # On MacOS: install python3 if needed
    - source ./ci/travis_osx.sh

    # X server
    - if [ "$TRAVIS_OS_NAME" == "linux" ];
      then
          export DISPLAY=:99.0;
      fi

install:
    # Upgrade distribution modules
    - python -m pip install --upgrade pip
    - pip install --upgrade setuptools

    # Install build dependencies
    - pip install --upgrade wheel
    - if [ "$TRAVIS_CPU_ARCH" == "ppc64le" ];
      then
          pip install numpy --pre --trusted-host www.silx.org --find-links http://www.silx.org/pub/wheelhouse/;
      else
          pip install --upgrade numpy;
      fi

    # Print Python info
    - python ./ci/info_platform.py
    - pip list

    # Generate source package or wheel
    - python setup.py $BUILD_COMMAND
    - ls dist

script:
    # Upgrade distribution modules
    - pip install --upgrade setuptools
    - pip install --upgrade pip

    # Dependencies
    - pip install fisx
    - if [ "$TRAVIS_CPU_ARCH" == "ppc64le" ];
      then
          pip install matplotlib --pre --trusted-host www.silx.org --find-links http://www.silx.org/pub/wheelhouse/;
      else
          pip install matplotlib;
      fi
    - if [ "$TRAVIS_CPU_ARCH" == "ppc64le" ];
      then
          pip install h5py --pre --trusted-host www.silx.org --find-links http://www.silx.org/pub/wheelhouse/;
      else
          pip install h5py;
      fi
    # too slow to build fabio
    # - if [ "$TRAVIS_CPU_ARCH" == "ppc64le" ];
    #  then
    #      pip install fabio --pre --trusted-host www.silx.org --find-links http://www.silx.org/pub/wheelhouse/;
    #  else
    #      pip install fabio;
    #  fi
    #
    #- pip install silx --pre --trusted-host www.silx.org --find-links http://www.silx.org/pub/wheelhouse/;

    #- if [[ ! -z $QT_BINDING ]];
    #  then
    #      pip install $QT_BINDING;
    #  fi

    # Install from source package
    - pip install --pre --find-links dist/ --no-cache-dir --no-index PyMca5 $PIP_INSTALL_EXTRA_ARGS

    # Print Python info
    - python ci/info_platform.py
    - pip list

    # Run the tests
    - cd ..
    - python -m PyMca5.tests.TestAll
